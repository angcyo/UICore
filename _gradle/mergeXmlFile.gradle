/**
 * 2023-2-7
 * 将多个路径的文件内容合并到一个文件
 * */

task _mergeXmlFile(group: 'angcyo', description: '将多个路径的xml文件内容合并到一个xml文件') {
    //配置任务
}

_mergeXmlFile.doFirst {
    _mergeLanguageFile("", ".apk/LaserPecker Android Resource(英文).xml")        //默认英文
    _mergeLanguageFile("-zh", ".apk/LaserPecker Android Resource(中文).xml")
    _mergeLanguageFile("-ja", ".apk/LaserPecker Android Resource(日语).xml")
    _mergeLanguageFile("-ko", ".apk/LaserPecker Android Resource(韩语).xml")
    _mergeLanguageFile("-de", ".apk/LaserPecker Android Resource(德语).xml")
    _mergeLanguageFile("-es", ".apk/LaserPecker Android Resource(西班牙语).xml")
    _mergeLanguageFile("-fr", ".apk/LaserPecker Android Resource(法语).xml")
    _mergeLanguageFile("-zh-rTW", ".apk/LaserPecker Android Resource(台湾).xml")
    _mergeLanguageFile("-zh-rHK", ".apk/LaserPecker Android Resource(香港).xml")
}

/**合并指定语言的xml文件*/
def _mergeLanguageFile(language, outputPath) {
    _mergeXmlFile(getLanguageResPath(language), outputPath)
}

/** 合并文件内容到一个文件*/
def _mergeXmlFile(pathList, outputPath) {
    def outputFile = file(outputPath)
    if (pathList != null && pathList.size() > 0) {
        outputFile.delete()
        def index = 0
        def size = pathList.size()
        for (path in pathList) {
            def pathFile = file(path)
            if (pathFile.exists()) {
                if (index > 0) {
                    outputFile.append("\n")
                }
                //outputFile.append(pathFile.text)
                def lines = pathFile.text.readLines()
                def fromIndex = 0
                def toIndex = lines.size()

                if (size > 1) {
                    if (index == 0) {
                        //如果是第一个文件, 则删除xml中的最后1行
                        toIndex = toIndex - 1
                    } else if (index == size - 1) {
                        //最后一个文件, 则删除xml中的前2行
                        fromIndex = 2
                    } else {
                        //中间行, 删除前2行, 删除最后1行
                        toIndex = toIndex - 1
                        fromIndex = 2
                    }
                }
                outputFile.append(lines.subList(fromIndex, toIndex).join("\n"))
                index++
            }
        }
        System.err.println "合并完成:${pathList}↓\n${outputPath}"
    }
}
